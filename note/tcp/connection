

                         client        client              server              server
                          APP          TCP                 TCP                 APP
                           |            |                   |                   |         
                           |            |                   |                   |  
                  connect  |\           |                   |                   |  
                           | \          |                   |                   |  
                           |  \         |                   |                   |  
                           |   \        |                   |                   |  
                           |            |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |                                    
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
                           |                |                   |                   |  
















       The following are general socket errors only.  There may be other domain-specific error codes.

       EACCES For UNIX domain sockets, which are identified by pathname: Write permission is denied on the socket file, or search permission is denied for one of the directories  in  the  path  prefix.   (See  also  path_resolu‐
              tion(7).)

       EADDRINUSE
              Local address is already in use.

       EADDRNOTAVAIL
              (Internet  domain sockets) The socket referred to by sockfd had not previously been bound to an address and, upon attempting to bind it to an ephemeral port, it was determined that all port numbers in the ephemeral
              port range are currently in use.  See the discussion of /proc/sys/net/ipv4/ip_local_port_range in ip(7).

       EAFNOSUPPORT
              The passed address didn't have the correct address family in its sa_family field.

       EAGAIN Insufficient entries in the routing cache.

       EALREADY
              The socket is nonblocking and a previous connection attempt has not yet been completed.

       EBADF  The file descriptor is not a valid index in the descriptor table.

       ECONNREFUSED
              No-one listening on the remote address.

       EFAULT The socket structure address is outside the user's address space.

       EINPROGRESS
              The socket is nonblocking and the connection cannot be completed immediately.  It is possible to select or poll for completion by selecting the socket for writing.  After select indicates writability,  use
              getsockopt to read the SO_ERROR option at level SOL_SOCKET to determine whether connect completed successfully (SO_ERROR is zero) or unsuccessfully (SO_ERROR is one of the usual error codes listed here,
              explaining the reason for the failure).

       EINTR  The system call was interrupted by a signal that was caught; see signal(7).

       EISCONN
              The socket is already connected.

       ENETUNREACH
              Network is unreachable.

       ENOTSOCK
              The file descriptor sockfd does not refer to a socket.

       EPROTOTYPE
              The socket type does not support the requested communications protocol.  This error can occur, for example, on an attempt to connect a UNIX domain datagram socket to a stream socket.

       ETIMEDOUT
              Timeout while attempting connection.  The server may be too busy to accept new connections.  Note that for IP sockets the timeout may be very long when syncookies are enabled on the server.






error 

  ==>>> 






